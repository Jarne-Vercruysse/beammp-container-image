# This builds the latest stable release version of beammp
name: Release Pipe
on:
  push:
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab
  pull_request:
    types:
      - opened
  schedule:
    - cron: "0 0 * * 0" # weekly at sunday night

env:
  CONTAINER_FILE: ./glibc.Containerfile
  IMAGE_NAME: rouhim/beammp-server
  TAG: latest

jobs:

  check-containerfile:
    name: Check container file
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  build-container-image:
    needs: check-containerfile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build container image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.TAG }}
          archs: amd64
          oci: true
          containerfiles: |
            ${{ env.CONTAINER_FILE }}

      - name: Save container image
        run: podman save -o beammp.tar ${{ env.IMAGE_NAME }}:${{ env.TAG }}

      - name: Upload container image
        uses: actions/upload-artifact@v3
        with:
          name: container-image
          path: beammp.tar


  scan-container:
    name: Scan container for vulnerabilities
    needs: build-container-image
    runs-on: ubuntu-latest
    steps:
      - name: Download container image
        uses: actions/download-artifact@v3
        with:
          name: container-image
          path: .

      - name: Restore container image
        run: podman load --input beammp.tar

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'rouhim/this-week-in-past:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  test-container:
    name: Test container image
    needs: build-container-image
    runs-on: ubuntu-latest
    steps:
      - name: Download container Image
        uses: actions/download-artifact@v3
        with:
          name: container-image
          path: .

      - name: Restore container image
        run: podman load --input beammp.tar

      - name: Test the built image
        env:
          BEAMMP_AUTH_KEY: ${{ secrets.BEAMMP_AUTH_KEY }}
        run: |
          bash test-image.sh rouhim/beammp-server:latest

      - name: Cleanup
        run: rm beammp.tar && podman kill test-container && podman rm test-container

  push-container:
    name: Push container image
    needs: [ scan-container, test-container ]
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' # only push the image if the branch is main
    steps:
      - name: Download container image
        uses: actions/download-artifact@v3
        with:
          name: container-image
          path: .

      - name: Restore container image
        run: podman load --input beammp.tar

      - name: Push To docker hub
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.TAG }}
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}