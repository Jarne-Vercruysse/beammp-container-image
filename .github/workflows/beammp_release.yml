# This builds the latest stable version of beammp
name: Stable Release Pipe
on:
  push:
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab
  pull_request:
    types:
      - opened
  schedule:
    - cron: "0 0 * * 0" # weekly at sunday night

env:
  CONTAINER_FILE: ./Containerfile
  IMAGE_NAME: rouhim/beammp-server
  IMAGE_TAG: latest

jobs:


  check-containerfile:
    name: Check container file
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'


  build-container-image:
    needs: check-containerfile
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        container-image-arch: [ amd64, arm64 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ matrix.container-image-arch }}

      - name: Build container image
        run: |
          docker buildx create --name mybuilder
          docker buildx use mybuilder
          docker buildx inspect --bootstrap
          docker buildx build --platform linux/${{ matrix.container-image-arch }} -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}_${{ matrix.container-image-arch }} -f ${{ env.CONTAINER_FILE }} --push .

      - name: Save container image
        run: docker save -o ${{ matrix.container-image-arch }}.tar ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}_${{ matrix.container-image-arch }}

      - name: Upload container image
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.container-image-arch }}
          path: ${{ matrix.container-image-arch }}.tar


  scan-container:
    name: Scan container for vulnerabilities
    needs: build-container-image
    runs-on: ubuntu-latest
    steps:
      - name: Download Container Image
        uses: actions/download-artifact@v3
        with:
          name: amd64
          path: .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: image
          input: amd64.tar
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'


  test-container:
    name: Test container image
    needs: build-container-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Container Image
        uses: actions/download-artifact@v3
        with:
          name: amd64
          path: .

      - name: Restore docker image
        run: docker load --input amd64.tar

      - name: Test the built image
        env:
          BEAMMP_AUTH_KEY: ${{ secrets.BEAMMP_AUTH_KEY }}
        run: |
          bash test-image.sh localhost/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}_amd64


  push-container:
    name: Push container image
    needs: [ scan-container, test-container ]
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' # only push the image if the branch is main
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download amd64 Container Image
        uses: actions/download-artifact@v3
        with:
          name: amd64
          path: .
      - name: Download arm64 Container Image
        uses: actions/download-artifact@v3
        with:
          name: arm64
          path: .

      - name: Restore container images
        run: |
          docker load --input amd64.tar
          docker load --input arm64.tar

      - name: Login to docker hub
        run: docker login docker.io --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push multi arch container image to docker hub
        run: |
          docker manifest create ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}_amd64 \
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}_arm64
          docker manifest push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Update docker hub description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.IMAGE_NAME }}
